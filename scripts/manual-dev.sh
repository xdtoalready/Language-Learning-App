#!/bin/bash
# scripts/manual-dev.sh - –ó–∞–ø—É—Å–∫ –±–µ–∑ Docker

echo "üöÄ –ó–∞–ø—É—Å–∫ –±–µ–∑ Docker (—Ä—É—á–Ω–æ–π —Ä–µ–∂–∏–º)..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º PostgreSQL
if ! pg_isready -h localhost -p 5432 > /dev/null 2>&1; then
    echo "‚ùå PostgreSQL –Ω–µ –∑–∞–ø—É—â–µ–Ω –Ω–∞ localhost:5432"
    echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ PostgreSQL –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Docker: ./scripts/dev.sh"
    exit 1
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º Backend –≤ —Ñ–æ–Ω–µ
echo "üîß –ó–∞–ø—É—Å–∫ Backend..."
cd backend
npm run dev &
BACKEND_PID=$!
cd ..

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ backend
sleep 3

# –ó–∞–ø—É—Å–∫–∞–µ–º Frontend
echo "üåê –ó–∞–ø—É—Å–∫ Frontend..."
cd frontend
npm run dev &
FRONTEND_PID=$!
cd ..

echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!"
echo "üåê Frontend: http://localhost:3000"
echo "üîß Backend: http://localhost:5000"
echo ""
echo "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"

# –û–∂–∏–¥–∞–µ–º —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
trap "kill $BACKEND_PID $FRONTEND_PID; exit" INT
wait