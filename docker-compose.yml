# docker-compose.yml (в корне проекта)
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: language-learning-db
    environment:
      POSTGRES_DB: languageapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - language-learning-net
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: language-learning-backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:password123@postgres:5432/languageapp
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      PORT: 5000
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    networks:
      - language-learning-net
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - /app/node_modules

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: language-learning-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:5000/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - language-learning-net
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next

volumes:
  postgres_data:

networks:
  language-learning-net:
    driver: bridge

---

# docker-compose.dev.yml (для разработки)
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: language-learning-db-dev
    environment:
      POSTGRES_DB: languageapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - language-learning-dev

  # Backend API (development mode)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: language-learning-backend-dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:password123@postgres:5432/languageapp
      JWT_SECRET: dev-secret-key
      PORT: 5000
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    networks:
      - language-learning-dev
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev

  # Frontend (development mode)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: language-learning-frontend-dev
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:5000/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - language-learning-dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

volumes:
  postgres_dev_data:

networks:
  language-learning-dev:
    driver: bridge