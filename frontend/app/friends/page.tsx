// frontend/app/friends/page.tsx
'use client';

import React, { useState } from 'react';
import { motion } from 'framer-motion';
import {
  MagnifyingGlassIcon,
  UserPlusIcon,
  UsersIcon,
  PaperAirplaneIcon,
  CheckIcon,
  XMarkIcon
} from '@heroicons/react/24/outline';
import { toast } from 'react-hot-toast';
import { Button } from '@/components/ui/Button';
import { Input } from '@/components/ui/Input';
import { Card, CardContent, CardHeader } from '@/components/ui/Card';
import { Badge } from '@/components/ui/Badge';
import DashboardLayout from '@/components/layout/DashboardLayout';
import { LANGUAGES } from '@/lib/utils';

// –ú–æ–∫ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥—Ä—É–∑–µ–π (–ø–æ–∫–∞ —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –≥–æ—Ç–æ–≤–∞)
const mockFriends = [
  {
    id: '1',
    username: 'alex_lang',
    avatar: 'ü§ì',
    learningLanguage: 'Korean',
    currentStreak: 12,
    totalWordsLearned: 245,
    cloudStreak: 8, // –°–æ–≤–º–µ—Å—Ç–Ω–∞—è —Å–µ—Ä–∏—è –¥–Ω–µ–π
    lastActive: '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥'
  },
  {
    id: '2', 
    username: 'maria_polyglot',
    avatar: 'üìö',
    learningLanguage: 'Chinese',
    currentStreak: 25,
    totalWordsLearned: 567,
    cloudStreak: 15, // –°–æ–≤–º–µ—Å—Ç–Ω–∞—è —Å–µ—Ä–∏—è –¥–Ω–µ–π
    lastActive: '1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥'
  },
  {
    id: '3',
    username: 'john_student',
    avatar: 'üéØ',
    learningLanguage: 'English',
    currentStreak: 3,
    totalWordsLearned: 89,
    cloudStreak: 2, // –°–æ–≤–º–µ—Å—Ç–Ω–∞—è —Å–µ—Ä–∏—è –¥–Ω–µ–π
    lastActive: '3 —á–∞—Å–∞ –Ω–∞–∑–∞–¥'
  }
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–ª–∞—á–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–µ—Ä–∏–∏
const getCloudStatus = (days: number) => {
  if (days >= 21) return { 
    emoji: '‚òÅÔ∏è‚ú®', 
    size: 'large', 
    color: 'text-yellow-500', 
    bg: 'bg-yellow-50',
    label: '–ó–æ–ª–æ—Ç–æ–µ –æ–±–ª–∞—á–∫–æ',
    description: '21+ –¥–Ω–µ–π —Å–æ–≤–º–µ—Å—Ç–Ω–æ–≥–æ –∏–∑—É—á–µ–Ω–∏—è!'
  };
  if (days >= 11) return { 
    emoji: '‚òÅÔ∏èüåü', 
    size: 'medium', 
    color: 'text-green-500', 
    bg: 'bg-green-50',
    label: '–ë–æ–ª—å—à–æ–µ –æ–±–ª–∞—á–∫–æ',
    description: '11-20 –¥–Ω–µ–π –≤–º–µ—Å—Ç–µ'
  };
  if (days >= 6) return { 
    emoji: '‚òÅÔ∏èüíô', 
    size: 'small', 
    color: 'text-blue-500', 
    bg: 'bg-blue-50',
    label: '–°—Ä–µ–¥–Ω–µ–µ –æ–±–ª–∞—á–∫–æ',
    description: '6-10 –¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏'
  };
  if (days >= 1) return { 
    emoji: '‚òÅÔ∏è', 
    size: 'tiny', 
    color: 'text-gray-500', 
    bg: 'bg-gray-50',
    label: '–ú–∞–ª–µ–Ω—å–∫–æ–µ –æ–±–ª–∞—á–∫–æ',
    description: '1-5 –¥–Ω–µ–π –∏–∑—É—á–µ–Ω–∏—è'
  };
  return { 
    emoji: '‚≠ï', 
    size: 'none', 
    color: 'text-gray-300', 
    bg: 'bg-gray-50',
    label: '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
    description: '–ù–∞—á–Ω–∏—Ç–µ –∏–∑—É—á–∞—Ç—å –≤–º–µ—Å—Ç–µ!'
  };
};

const FriendCard = ({ friend }: { friend: any }) => {
  const cloudStatus = getCloudStatus(friend.cloudStreak);
  
  return (
    <motion.div
      initial={{ opacity: 0, scale: 0.95 }}
      animate={{ opacity: 1, scale: 1 }}
      className="bg-white border border-gray-200 rounded-xl p-6 hover:shadow-lg transition-all duration-300"
    >
      <div className="flex items-center justify-between">
        {/* –õ–µ–≤–∞—è —á–∞—Å—Ç—å - –∞–≤–∞—Ç–∞—Ä –∏ –∏–Ω—Ñ–æ */}
        <div className="flex items-center gap-4">
          {/* –ê–≤–∞—Ç–∞—Ä */}
          <div className="w-16 h-16 bg-gradient-to-r from-blue-400 to-purple-500 rounded-full flex items-center justify-center">
            <span className="text-2xl">{friend.avatar}</span>
          </div>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div>
            <div className="flex items-center gap-2 mb-1">
              <h3 className="font-semibold text-lg text-gray-900">{friend.username}</h3>
              <span className="text-xl">
                {LANGUAGES[friend.learningLanguage as keyof typeof LANGUAGES]?.flag || 'üåç'}
              </span>
            </div>
            
            <div className="flex items-center gap-4 text-sm text-gray-600 mb-2">
              <span className="flex items-center gap-1">
                üî• {friend.currentStreak} –¥–Ω–µ–π
              </span>
              <span className="flex items-center gap-1">
                üìö {friend.totalWordsLearned} —Å–ª–æ–≤
              </span>
            </div>
            
            <p className="text-xs text-gray-500">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {friend.lastActive}</p>
          </div>
        </div>

        {/* –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å - –æ–±–ª–∞—á–∫–æ –º–æ—Ç–∏–≤–∞—Ü–∏–∏ */}
        <div className="text-center">
          <div className={`${cloudStatus.bg} rounded-xl p-4 min-w-[120px]`}>
            <div className="text-3xl mb-2">{cloudStatus.emoji}</div>
            <div className={`font-bold text-lg ${cloudStatus.color}`}>
              {friend.cloudStreak} –¥–Ω–µ–π
            </div>
            <div className="text-xs font-medium text-gray-600 mt-1">
              {cloudStatus.label}
            </div>
          </div>
          <p className="text-xs text-gray-500 mt-2 max-w-[120px]">
            {cloudStatus.description}
          </p>
        </div>
      </div>
    </motion.div>
  );
};

export default function FriendsPage() {
  const [searchQuery, setSearchQuery] = useState('');
  const [activeTab, setActiveTab] = useState<'friends' | 'search'>('friends');

  const handleAddFriend = () => {
    toast.success('–°–∏—Å—Ç–µ–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥—Ä—É–∑–µ–π —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–∞!');
  };

  return (
    <DashboardLayout>
      <div className="max-w-4xl mx-auto space-y-6">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="flex items-center justify-between">
          <div>
            <h1 className="text-3xl font-bold text-gray-900">–î—Ä—É–∑—å—è</h1>
            <p className="text-gray-600 mt-1">
              –ò–∑—É—á–∞–π—Ç–µ —è–∑—ã–∫–∏ –≤–º–µ—Å—Ç–µ –∏ —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º –¥—Ä—É–≥ –¥—Ä—É–≥–∞
            </p>
          </div>
          <Button onClick={handleAddFriend} className="flex items-center gap-2">
            <UserPlusIcon className="h-4 w-4" />
            –ù–∞–π—Ç–∏ –¥—Ä—É–∑–µ–π
          </Button>
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ –æ–±–ª–∞—á–∫–æ–≤ */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
        >
          <Card className="bg-gradient-to-r from-blue-50 to-purple-50 border-blue-200">
            <CardContent className="p-6">
              <div className="flex items-center gap-4">
                <div className="text-4xl">üí¨</div>
                <div>
                  <h3 className="font-semibold text-lg text-gray-900 mb-2">
                    –°–∏—Å—Ç–µ–º–∞ –æ–±–ª–∞—á–∫–æ–≤ –º–æ—Ç–∏–≤–∞—Ü–∏–∏
                  </h3>
                  <p className="text-gray-700 text-sm mb-3">
                    –ò–∑—É—á–∞–π—Ç–µ —è–∑—ã–∫–∏ –≤–º–µ—Å—Ç–µ —Å –¥—Ä—É–∑—å—è–º–∏! –ö–æ–≥–¥–∞ –≤—ã –æ–±–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç–µ –¥–Ω–µ–≤–Ω—É—é –Ω–æ—Ä–º—É (–ø–æ–≤—Ç–æ—Ä—è–µ—Ç–µ —Å–ª–æ–≤–∞), 
                    –≤–∞—à–µ –æ–±—â–µ–µ –æ–±–ª–∞—á–∫–æ —Ä–∞—Å—Ç–µ—Ç –∏ –º–µ–Ω—è–µ—Ç—Å—è:
                  </p>
                  <div className="grid grid-cols-2 md:grid-cols-4 gap-3 text-xs">
                    <div className="flex items-center gap-2">
                      <span className="text-lg">‚òÅÔ∏è</span>
                      <span>1-5 –¥–Ω–µ–π</span>
                    </div>
                    <div className="flex items-center gap-2">
                      <span className="text-lg">‚òÅÔ∏èüíô</span>
                      <span>6-10 –¥–Ω–µ–π</span>
                    </div>
                    <div className="flex items-center gap-2">
                      <span className="text-lg">‚òÅÔ∏èüåü</span>
                      <span>11-20 –¥–Ω–µ–π</span>
                    </div>
                    <div className="flex items-center gap-2">
                      <span className="text-lg">‚òÅÔ∏è‚ú®</span>
                      <span>21+ –¥–Ω–µ–π</span>
                    </div>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </motion.div>

        {/* –í–∫–ª–∞–¥–∫–∏ */}
        <div className="border-b border-gray-200">
          <nav className="flex space-x-8">
            <button
              onClick={() => setActiveTab('friends')}
              className={`flex items-center gap-2 py-2 px-1 border-b-2 font-medium text-sm transition-colors ${
                activeTab === 'friends'
                  ? 'border-blue-500 text-blue-600'
                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
              }`}
            >
              <UsersIcon className="h-4 w-4" />
              –ú–æ–∏ –¥—Ä—É–∑—å—è
              <Badge variant="secondary" className="text-xs">
                {mockFriends.length}
              </Badge>
            </button>
            <button
              onClick={() => setActiveTab('search')}
              className={`flex items-center gap-2 py-2 px-1 border-b-2 font-medium text-sm transition-colors ${
                activeTab === 'search'
                  ? 'border-blue-500 text-blue-600'
                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
              }`}
            >
              <MagnifyingGlassIcon className="h-4 w-4" />
              –ü–æ–∏—Å–∫
            </button>
          </nav>
        </div>

        {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ */}
        {activeTab === 'friends' ? (
          <motion.div
            key="friends"
            initial={{ opacity: 0, y: 10 }}
            animate={{ opacity: 1, y: 0 }}
            className="space-y-4"
          >
            {mockFriends.length > 0 ? (
              mockFriends.map((friend) => (
                <FriendCard key={friend.id} friend={friend} />
              ))
            ) : (
              <div className="text-center py-12 text-gray-500">
                <UsersIcon className="h-12 w-12 mx-auto mb-4 text-gray-300" />
                <h3 className="font-medium text-lg mb-2">–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥—Ä—É–∑–µ–π</h3>
                <p className="text-sm mb-4">–ù–∞–π–¥–∏—Ç–µ –¥—Ä—É–∑–µ–π –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω–æ–≥–æ –∏–∑—É—á–µ–Ω–∏—è —è–∑—ã–∫–æ–≤!</p>
                <Button onClick={handleAddFriend}>
                  –ù–∞–π—Ç–∏ –¥—Ä—É–∑–µ–π
                </Button>
              </div>
            )}
          </motion.div>
        ) : (
          <motion.div
            key="search"
            initial={{ opacity: 0, y: 10 }}
            animate={{ opacity: 1, y: 0 }}
            className="space-y-6"
          >
            {/* –ü–æ–∏—Å–∫ */}
            <div className="relative">
              <MagnifyingGlassIcon className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400" />
              <Input
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                placeholder="–ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ email..."
                className="pl-10"
              />
            </div>

            {/* –ó–∞–≥–ª—É—à–∫–∞ –ø–æ–∏—Å–∫–∞ */}
            <Card>
              <CardContent className="p-12 text-center">
                <MagnifyingGlassIcon className="h-12 w-12 mx-auto mb-4 text-gray-300" />
                <h3 className="font-medium text-lg mb-2 text-gray-700">–ü–æ–∏—Å–∫ –¥—Ä—É–∑–µ–π</h3>
                <p className="text-gray-500 mb-4">
                  –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥—Ä—É–∑–µ–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.
                </p>
                <p className="text-sm text-gray-400">
                  –°–∫–æ—Ä–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –∏—Å–∫–∞—Ç—å –¥—Ä—É–∑–µ–π –ø–æ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞—è–≤–∫–∏!
                </p>
              </CardContent>
            </Card>
          </motion.div>
        )}
      </div>
    </DashboardLayout>
  );
}